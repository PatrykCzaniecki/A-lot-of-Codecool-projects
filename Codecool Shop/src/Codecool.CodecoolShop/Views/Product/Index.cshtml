@inject SignInManager<CodecoolCodecoolShopUser> SignInManager
@inject UserManager<CodecoolCodecoolShopUser> UserManager

@{
    ViewData["Title"] = "Home Page";
}
@using Codecool.CodecoolShop.Areas.Identity.Data
@using Microsoft.AspNetCore.Identity
@model Codecool.CodecoolShop.Controllers.ModelContainer

<div class="container">
    @foreach (var element in Model.products)
    {
        <div class="col-lg-3 col-lg-3" style="display: inline-block; height: 550px; max-width: 350px;">
            <div class="card">
                <img src="~/img/@(element.Name).jpg" style="align-self: center; height: 50%; padding-top: 10px; width: 50%;">
                <div class="card-body">
                    <h5 class="card-title text-center">
                        Product
                        @{ var num = Model.products.IndexOf(element) + 1; }
                        @num
                    </h5>
                    <h5 class="card-title">@element.Name</h5>
                    <p class="card-text">@element.Description.</p>
                    <p class="card-text">
                        <a asp-action="SortByCategory" asp-route-id=@element.Category.Id>Category: @element.Category.Name</a>
                    </p>
                    <p class="card-text">
                        <a asp-action="SortBySupplier" asp-route-id=@element.Supplier.Id>Supplier: @element.Supplier.Name</a>
                    </p>
                    <p class="card-text text-center">
                        <strong>Price: @element.DefaultPrice @element.Currency</strong>
                    </p>
                    @if (SignInManager.IsSignedIn(User))
                    {
                        @if (!Model.OrderedProducts.Any(p => p.ProductId == element.Id))
                        {
                            <div style="text-align: center">
                                <a asp-action="Add" asp-route-id="@element.Id" type="button" class="btn btn-primary" style="float: bottom">Add To Cart</a>
                            </div>
                        }
                        @if (Model.OrderedProducts.Any(p => p.ProductId == element.Id))
                        {
                            <div style="text-align: center">
                                <p class="card-text text-center">
                                    Quantity:
                                    @Model.OrderedProducts.Where(p => p.ProductId == element.Id && p.Order.OrderPayed == "No").Select(p => p.Quantity).First()
                                </p>
                                <a asp-action="Add" asp-route-id="@element.Id" style="border-radius: 20px; color: black; font-size: 25px; text-decoration: none; width: 40px;">
                                    <i class="bi bi-plus-circle"></i>
                                </a>
                                <a asp-action="Minus" asp-route-id="@element.Id" style="border-radius: 20px; color: black; font-size: 25px; text-decoration: none; width: 40px;">
                                    <i class="bi bi-dash-circle"></i>
                                </a>
                                <a asp-action="Delete" asp-route-id="@element.Id" style="border-radius: 20px; color: red; font-size: 25px; text-decoration: none; width: 40px;">
                                    <i class="bi bi-x-circle-fill"></i>
                                </a>
                            </div>
                        }
                    }
                    else
                    {
                        <div style="text-align: center">
                            <span>Login to add products to cart.</span>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>